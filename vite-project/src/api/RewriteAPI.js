/**
 * Enhance Resume API: Sends resume text and job description to the API for enhancement.
 * Returns an enhanced resume tailored to the job description.
 */
export const enhanceResume = async (resumeText, jobDescription) => {
    console.log("Enhance Resume API - Preparing Request...");

    // Replace this with the actual API endpoint
    const apiUrl = "https://api.example.com/enhance-resume";

    try {
        const payload = {
            resume: resumeText,
            jobDescription: jobDescription,
        };

        console.log("Enhance Resume API - Sending Request:", {
            endpoint: apiUrl,
            payload,
        });

        const response = await fetch(apiUrl, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(payload), // Updated payload
        });

        console.log("Enhance Resume API - Response Status:", response.status);

        if (!response.ok) {
            console.error("Enhance Resume API - Response Error:", response.statusText);
            throw new Error(`API returned an error: ${response.status} - ${response.statusText}`);
        }

        const data = await response.json();
        console.log("Enhance Resume API - Response Body:", data);

        if (!data.enhancedResume) {
            console.error("Enhance Resume API - Response Missing Enhanced Resume:", data);
            throw new Error("API response is missing 'enhancedResume'.");
        }

        return data.enhancedResume; // Assuming API responds with { enhancedResume: "..." }
    } catch (error) {
        console.error("Enhance Resume API - Error:", error.message);

        // Log the fallback and provide a mock response for testing
        console.warn("Enhance Resume API - Falling back to mock response...");
        return generateMockEnhancedResume(resumeText, jobDescription);
    }
};

/**
 * Generate Mock Enhanced Resume: Provides a mock response when the API is unavailable.
 */
const generateMockEnhancedResume = (resumeText, jobDescription) => {
    console.log("Mock API - Enhancing Resume with Job Description...");

    const extractedSkills = extractRelevantSkills(jobDescription);
    const enhancedResume = `
    Enhanced Resume:
    ${resumeText}

    Job-Specific Highlights:
    ${extractedSkills.join(", ")} (Generated by Mock API)
    `;

    console.log("Mock API - Enhanced Resume Generated.");
    return enhancedResume.trim();
};

/**
 * Extract Relevant Skills: Simulates identifying key skills from the job description.
 */
const extractRelevantSkills = (jobDescription) => {
    console.log("Mock API - Extracting relevant skills...");
    const predefinedSkills = ["Java", "React", "SQL", "Spring Boot", "Node.js", "Python", "AWS", "Docker"];
    const relevantSkills = predefinedSkills.filter((skill) => jobDescription.toLowerCase().includes(skill.toLowerCase()));

    console.log("Mock API - Relevant Skills Identified:", relevantSkills);
    return relevantSkills.length > 0 ? relevantSkills : ["No specific skills identified"];
};
